{"version":3,"sources":["../../src/Editor.js"],"names":["noop","MonacoEditor","props","editorRef","component","containerElement","undefined","_currentValue","value","initMonacoEditor","prevProps","editor","setValue","language","monaco","setModelLanguage","getModel","theme","setTheme","width","height","layout","editorDidMount","onDidChangeModelContent","event","getValue","onChange","defaultValue","options","create","className","Component","propTypes","PropTypes","oneOfType","string","number","object","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as monaco from 'monaco-editor';\nimport PropTypes from 'prop-types';\n\nfunction noop() {}\n\nexport default class MonacoEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.containerElement = undefined;\n    this._currentValue = props.value;\n  }\n  componentDidMount() {\n    this.initMonacoEditor();\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.value !== this._currentValue) {\n      this._currentValue = this.props.value;\n      if (this.editor) {\n        this.editor.setValue(this._currentValue);\n      }\n    }\n    if (prevProps.language !== this.props.language) {\n      monaco.editor.setModelLanguage(this.editor.getModel(), this.props.language);\n    }\n    if (prevProps.theme !== this.props.theme) {\n      monaco.editor.setTheme(this.props.theme);\n    }\n    if (\n      this.editor &&\n      (this.props.width !== prevProps.width || this.props.height !== prevProps.height)\n    ) {\n      this.editor.layout();\n    }\n  }\n  editorDidMount(editor) {\n    this.props.editorDidMount(editor, monaco);\n    editor.onDidChangeModelContent((event) => {\n      const value = editor.getValue();\n      // Always refer to the latest value\n      this._currentValue = value;\n      this.props.onChange(value, event);\n    });\n  }\n  initMonacoEditor() {\n    const value = this.props.value !== null ? this.props.value : this.props.defaultValue;\n    const { language, theme, options } = this.props;\n    if (this.containerElement) {\n      this.editor = monaco.editor.create(this.containerElement, {\n        value,\n        language,\n        ...options,\n      });\n      if (theme) {\n        monaco.editor.setTheme(theme);\n      }\n      // After initializing monaco editor\n      this.editorDidMount(this.editor);\n    }\n  }\n  editorRef = (component) => {\n    this.containerElement = component;\n  };\n  render() {\n    const { width, height, className } = this.props;\n    return <div className={className} ref={this.editorRef} style={{ width, height }} />;\n  }\n}\n\nMonacoEditor.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  value: PropTypes.string,\n  defaultValue: PropTypes.string,\n  language: PropTypes.string,\n  theme: PropTypes.string,\n  options: PropTypes.object,\n  editorDidMount: PropTypes.func,\n  onChange: PropTypes.func,\n};\n\nMonacoEditor.defaultProps = {\n  width: '100%',\n  height: '100%',\n  value: null,\n  defaultValue: '',\n  language: 'javascript',\n  theme: null,\n  options: {},\n  editorDidMount: noop,\n  onChange: noop,\n};\n"]}