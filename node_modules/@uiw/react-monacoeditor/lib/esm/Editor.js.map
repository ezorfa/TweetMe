{"version":3,"sources":["../../src/Editor.js"],"names":["React","Component","monaco","PropTypes","noop","MonacoEditor","props","editorRef","component","containerElement","undefined","_currentValue","value","initMonacoEditor","prevProps","editor","setValue","language","setModelLanguage","getModel","theme","setTheme","width","height","layout","editorDidMount","onDidChangeModelContent","event","getValue","onChange","defaultValue","options","create","className","propTypes","oneOfType","string","number","object","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as monaco from 'monaco-editor';\nimport PropTypes from 'prop-types';\n\nfunction noop() {}\n\nexport default class MonacoEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.containerElement = undefined;\n    this._currentValue = props.value;\n  }\n  componentDidMount() {\n    this.initMonacoEditor();\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.value !== this._currentValue) {\n      this._currentValue = this.props.value;\n      if (this.editor) {\n        this.editor.setValue(this._currentValue);\n      }\n    }\n    if (prevProps.language !== this.props.language) {\n      monaco.editor.setModelLanguage(this.editor.getModel(), this.props.language);\n    }\n    if (prevProps.theme !== this.props.theme) {\n      monaco.editor.setTheme(this.props.theme);\n    }\n    if (\n      this.editor &&\n      (this.props.width !== prevProps.width || this.props.height !== prevProps.height)\n    ) {\n      this.editor.layout();\n    }\n  }\n  editorDidMount(editor) {\n    this.props.editorDidMount(editor, monaco);\n    editor.onDidChangeModelContent((event) => {\n      const value = editor.getValue();\n      // Always refer to the latest value\n      this._currentValue = value;\n      this.props.onChange(value, event);\n    });\n  }\n  initMonacoEditor() {\n    const value = this.props.value !== null ? this.props.value : this.props.defaultValue;\n    const { language, theme, options } = this.props;\n    if (this.containerElement) {\n      this.editor = monaco.editor.create(this.containerElement, {\n        value,\n        language,\n        ...options,\n      });\n      if (theme) {\n        monaco.editor.setTheme(theme);\n      }\n      // After initializing monaco editor\n      this.editorDidMount(this.editor);\n    }\n  }\n  editorRef = (component) => {\n    this.containerElement = component;\n  };\n  render() {\n    const { width, height, className } = this.props;\n    return <div className={className} ref={this.editorRef} style={{ width, height }} />;\n  }\n}\n\nMonacoEditor.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  value: PropTypes.string,\n  defaultValue: PropTypes.string,\n  language: PropTypes.string,\n  theme: PropTypes.string,\n  options: PropTypes.object,\n  editorDidMount: PropTypes.func,\n  onChange: PropTypes.func,\n};\n\nMonacoEditor.defaultProps = {\n  width: '100%',\n  height: '100%',\n  value: null,\n  defaultValue: '',\n  language: 'javascript',\n  theme: null,\n  options: {},\n  editorDidMount: noop,\n  onChange: noop,\n};\n"]}